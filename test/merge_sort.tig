let
    type int_array = array of int
    function print_array (arr: int_array) =
        (
            print("[");
            for i:= 0 to array_length(arr) - 1 do print_arr_ele(arr[i]);
            print("");
            print("]")
        )

    function create_array(): int_array = 
        let
            var size := 8 
            var arr := int_array [size] of 1
        in
            for i := 0 to size - 1 do arr[i] := random(50);
            arr
        end
     function merge_sort(arr: int_array): int_array =
        let
            var length := array_length(arr)
            function sub_arr(arr: int_array, lo: int, hi: int): int_array =
                let
                    var new_arr := int_array [hi - lo + 1] of 0
                    var counter := lo
                in
                    for i := 0 to hi - lo do 
                        (
                            new_arr[i] := arr[counter];
                            counter := counter + 1
                        );
                    new_arr 
                end

            function merge (left_arr: int_array, right_arr: int_array): int_array =
                let
                    var left_length := array_length(left_arr)
                    var right_length := array_length(right_arr)
                    var result_arr := int_array [left_length + right_length] of 0
                    var i := 0
                    var j := 0
                    var result_counter := 0
                in
                    while i < left_length & j < right_length do
                        if left_arr[i] < right_arr[j]
                        then (
                            result_arr[result_counter] := left_arr[i];
                            i := i +1;
                            result_counter := result_counter + 1
                        )
                        else (
                            result_arr[result_counter] := right_arr[j];
                            j := j +1;
                            result_counter := result_counter + 1
                        );
                    
                    while i < left_length do (
                        result_arr[result_counter] := left_arr[i];
                        i := i +1;
                        result_counter := result_counter +1
                    );

                    while j < right_length do (
                        result_arr[result_counter] := right_arr[j];
                        j := j +1;
                        result_counter := result_counter + 1
                    );
                    result_arr
                end

        in
           if length < 2 then arr
           else 
                let
                    var middle_index := length / 2
                    var left_arr := merge_sort(sub_arr(arr, 0, middle_index-1))
                    var right_arr := merge_sort(sub_arr(arr, middle_index, length-1))
                in
                    merge(left_arr, right_arr)
                end
        end
    var arr := create_array()

    function create_array_test(): int_array = 
        let
            var size := 5 
            var arr := int_array [size] of 1
        in
            for i := 0 to size - 1 do arr[i] := size-i-1;
            arr
        end

    var arr_test := create_array_test()
in
    print("Before sorting");
    print_array(arr);
    print("==============");
    arr := merge_sort(arr);
    print("After sorting");
    print_array(arr);

    /* Testing start here */
    assert_int(arr_test[0], 4);
    assert_int(arr_test[1], 3);
    assert_int(arr_test[2], 2);
    assert_int(arr_test[3], 1);
    assert_int(arr_test[4], 0);

    arr_test := merge_sort(arr_test);

    assert_int(arr_test[0], 0);
    assert_int(arr_test[1], 1);
    assert_int(arr_test[2], 2);
    assert_int(arr_test[3], 3);
    assert_int(arr_test[4], 4)
end