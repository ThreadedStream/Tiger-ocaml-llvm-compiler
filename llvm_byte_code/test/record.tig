; ModuleID = 'Tiger jit'
source_filename = "Tiger jit"

@0 = private unnamed_addr constant [6 x i8] c"hello\00"
@1 = private unnamed_addr constant [6 x i8] c"world\00"
@2 = private unnamed_addr constant [4 x i8] c"lol\00"

define i32 @main() {
entry:
  %student = alloca { i8*, { i8*, i32 }* }*
  %record_init3 = alloca { i8*, { i8*, i32 }* }
  %class = alloca { i8*, i32 }*
  %record_init = alloca { i8*, i32 }
  %Element = getelementptr { i8*, i32 }, { i8*, i32 }* %record_init, i32 0, i32 0
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @0, i32 0, i32 0), i8** %Element
  %Element1 = getelementptr { i8*, i32 }, { i8*, i32 }* %record_init, i32 0, i32 1
  store i32 10, i32* %Element1
  store { i8*, i32 }* %record_init, { i8*, i32 }** %class
  %class2 = load { i8*, i32 }*, { i8*, i32 }** %class
  %Element4 = getelementptr { i8*, { i8*, i32 }* }, { i8*, { i8*, i32 }* }* %record_init3, i32 0, i32 0
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @1, i32 0, i32 0), i8** %Element4
  %Element5 = getelementptr { i8*, { i8*, i32 }* }, { i8*, { i8*, i32 }* }* %record_init3, i32 0, i32 1
  store { i8*, i32 }* %class2, { i8*, i32 }** %Element5
  store { i8*, { i8*, i32 }* }* %record_init3, { i8*, { i8*, i32 }* }** %student
  %student6 = load { i8*, { i8*, i32 }* }*, { i8*, { i8*, i32 }* }** %student
  %element = getelementptr { i8*, { i8*, i32 }* }, { i8*, { i8*, i32 }* }* %student6, i32 0, i32 0
  %lol = load i8*, i8** %element
  call void @tig_print(i8* %lol)
  %student7 = load { i8*, { i8*, i32 }* }*, { i8*, { i8*, i32 }* }** %student
  %element8 = getelementptr { i8*, { i8*, i32 }* }, { i8*, { i8*, i32 }* }* %student7, i32 0, i32 1
  %lol9 = load { i8*, i32 }*, { i8*, i32 }** %element8
  %element10 = getelementptr { i8*, i32 }, { i8*, i32 }* %lol9, i32 0, i32 1
  %lol11 = load i32, i32* %element10
  call void @tig_print_int(i32 %lol11)
  %student12 = load { i8*, { i8*, i32 }* }*, { i8*, { i8*, i32 }* }** %student
  %element13 = getelementptr { i8*, { i8*, i32 }* }, { i8*, { i8*, i32 }* }* %student12, i32 0, i32 1
  %lol14 = load { i8*, i32 }*, { i8*, i32 }** %element13
  %element15 = getelementptr { i8*, i32 }, { i8*, i32 }* %lol14, i32 0, i32 0
  %lol16 = load i8*, i8** %element15
  call void @tig_print(i8* %lol16)
  %load_left = load { i8*, i32 }*, { i8*, i32 }** %class
  %element_left = getelementptr { i8*, i32 }, { i8*, i32 }* %load_left, i32 0, i32 0
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @2, i32 0, i32 0), i8** %element_left
  %student17 = load { i8*, { i8*, i32 }* }*, { i8*, { i8*, i32 }* }** %student
  %element18 = getelementptr { i8*, { i8*, i32 }* }, { i8*, { i8*, i32 }* }* %student17, i32 0, i32 1
  %lol19 = load { i8*, i32 }*, { i8*, i32 }** %element18
  %element20 = getelementptr { i8*, i32 }, { i8*, i32 }* %lol19, i32 0, i32 0
  %lol21 = load i8*, i8** %element20
  call void @tig_print(i8* %lol21)
  ret i32 0
}

declare void @tig_print_int(i32)

declare void @tig_print(i8*)

declare i32* @tig_init_array(i32, i32)

declare i32* @tig_init_record(i32)

declare void @tig_flush()

declare i8* @tig_getchar()

declare i32 @tig_ord(i8*)

declare i8* @tig_chr(i32)

declare i32 @tig_size(i8*)

declare i8* @tig_substring(i8*, i32, i32)

declare i8* @tig_concat(i8*, i8*)

declare i32 @tig_not(i32)

declare void @tig_exit(i32)
